{
  "name": "timecode",
  "description": "A javascript module for manipulating SMPTE tiemcode.",
  "homepage": "https://github.com/reidransom/timecode.js",
  "main": "./lib/timecode.js",
  "version": "0.0.1",
  "author": {
    "name": "Reid Ransom",
    "email": "reid@reidransom.com",
    "url": "http://reidransom.com/"
  },
  "bugs": {
    "url": "https://github.com/reidransom/timecode.js/issues",
    "email": "reid@reidransom.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/reidransom/timecode.js.git"
  },
  "devDependencies": {
    "nodeunit": "*"
  },
  "readme": "# timecode.js\n\nThis is a javascript module for manipulating SMPTE timecode.\n\nIt is primarily based on [pytimecode](http://code.google.com/p/pytimecode/).\n\nTheoretically it supports 60, 59.94, 50, 30, 29.97, 25, 24, 23.98 frame rates as well as milliseconds, although only 29.97 (drop and non-drop) and 23.98 have been tested.  Timecodes can be created from a number representing the frame count or a string in the form \"hh:mm:ss:ff\".\n\n## Usage\n\n    > var timecode = require(\"timecode\").Timecode;\n    > var tc = timecode.init({framerate: \"29.97\", timecode: \"01:00:00:00\"});\n    > tc.add(4);\n    > tc.add(\"00:02:03:00\");\n    > tc.toString();\n    '01:02:03:04'\n\n## Testing\n\n    $ npm install -g nodeunit\n\n    $ nodeunit test\n",
  "readmeFilename": "README.md",
  "_id": "timecode@0.0.1",
  "dist": {
    "shasum": "39022a024a50b52c011e650bcfb8c902501bbf74"
  },
  "_from": "timecode@0.0.1",
  "_resolved": "https://registry.npmjs.org/timecode/-/timecode-0.0.1.tgz"
}
